version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.8

jobs:
  build:
    docker:
      - image: cimg/php:8.2-browsers  # Using PHP 8.2 with browser support

    steps:
      - browser-tools/install-browser-tools
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip
            echo 'display_errors = On' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
            echo 'error_reporting = E_ALL' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

      - run:
          name: "Ensure Storage Logs Directory Exists"
          command: |
            mkdir -p storage/logs
            sudo chmod -R 0777 storage

      - run:
          name: "Create Environment File"
          command: mv .env.testing .env

      - run:
          name: "Show .env File"
          command: |
            echo "Contents of .env file:"
            cat .env

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install --no-interaction --prefer-dist --verbose

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - vendor

      - run:
          name: "Generate App Key"
          command: php artisan key:generate

      - run:
          name: "Check APP_KEY and APP_URL in .env"
          command: |
            grep APP_KEY .env
            grep APP_URL .env

      - run:
          name: "Set Directory Permissions"
          command: sudo chmod -R 0777 storage bootstrap/cache

      - run:
          name: "Install PHP Extensions"
          command: |
            sudo apt-get update
            sudo apt-get install -y php-sqlite3 php-mbstring php-xml php-zip

      - run:
          name: "Clear Config and Cache"
          command: |
            php artisan config:clear
            php artisan cache:clear

      - run:
          name: "Create Database and Run Migrations"
          command: |
            touch database/database.sqlite
            php artisan migrate --env=testing --force -vvv

      - run:
          name: "Check Artisan Command"
          command: php artisan --version

      - run:
          name: "Run PHP Lint"
          command: find . -name "*.php" -print0 | xargs -0 -n1 php -l

      - run:
          name: "Dump Composer Autoload"
          command: composer dump-autoload

      - run:
          name: "Run Unit Tests"
          command: ./vendor/bin/phpunit tests/Unit

      - run:
          name: "Run Feature Tests"
          command: ./vendor/bin/phpunit tests/Feature

      - run:
          name: "Install Laravel Dusk and Dusk Updater"
          command: |
            composer require --dev laravel/dusk
            composer require --dev staudenmeir/dusk-updater

      - run:
          name: "Update ChromeDriver"
          command: php artisan dusk:update --detect

      - run:
          name: "Start Laravel Server and Run Dusk Tests"
          command: |
            php artisan serve --host=0.0.0.0 --port=8000 --env=testing &
            sleep 5
            php artisan dusk --debug -vvv

      - run:
          name: "Show Server Logs"
          when: always
          command: |
            if [ -f storage/logs/server.log ]; then
              echo "Contents of storage/logs/server.log:"
              cat storage/logs/server.log
            else
              echo "No server logs found."
            fi

      - run:
          name: "Show Laravel Logs"
          when: always
          command: |
            if [ -f storage/logs/laravel.log ]; then
              echo "Contents of storage/logs/laravel.log:"
              cat storage/logs/laravel.log
            else
              echo "No Laravel logs found."
            fi
