version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.8

jobs:
  build:
    docker:
      - image: cimg/php:8.2-browsers  # Using PHP with browser support (comes with Chrome and Firefox)

    steps:
      - browser-tools/install-browser-tools
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip

      - run:
          name: "Create Environment file"
          command: |
            mv .env.testing .env

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: "Generate App key"
          command: php artisan key:generate

      - run:
          name: "Install Sqlite"  # Simplified SQLite installation without PPA
          command: |
            sudo apt-get update
            sudo apt-get install -y php-sqlite3
            touch database/database.sqlite
            php artisan migrate --env=testing

      - run:
          name: "Run Unit Tests"
          command: ./vendor/bin/phpunit tests/Unit

      - run:
          name: "Run Feature Tests"
          command: ./vendor/bin/phpunit tests/Feature

      - run:
          name: "Install Dusk and Update ChromeDriver"  # Installing Dusk and updating ChromeDriver
          command: |
            composer require --dev laravel/dusk
            composer require --dev staudenmeir/dusk-updater  # Ensure Dusk is up to date
            php artisan dusk:chrome-driver --detect  # Automatically detects and installs the correct ChromeDriver version

      # Removed manual ChromeDriver startup, as Laravel Dusk will handle this part

      - run:
          name: "Run Laravel Server"  # Starts the Laravel server on port 8000 in the background
          command: php artisan serve --host=127.0.0.1 --port=8000 &
          background: true  # Run this command in the background

      - run:
          name: "Wait for Laravel Server"  # Added this step to wait for Laravel server to be fully started
          command: |
            timeout=60  # Maximum wait time of 60 seconds
            elapsed=0
            until curl --output /dev/null --silent --head --fail http://127.0.0.1:8000; do
              if [ "$elapsed" -ge "$timeout" ]; then
                echo "Timeout waiting for Laravel server to start."
                exit 1  # Exit if server doesn't start within the timeout period
              fi
              echo 'Waiting for Laravel server...'  # Keep checking every 5 seconds
              sleep 5
              elapsed=$((elapsed + 5))
            done

      - run:
          name: "Run Browser Tests"  # Finally, run Dusk tests once the server is ready
          command: php artisan dusk
